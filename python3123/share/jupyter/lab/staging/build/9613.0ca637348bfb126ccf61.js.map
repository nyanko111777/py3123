{"version":3,"file":"9613.0ca637348bfb126ccf61.js?v=0ca637348bfb126ccf61","mappings":"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","sources":["webpack://@jupyterlab/application-top/./node_modules/filesize/dist/filesize.esm.js"],"sourcesContent":["/**\n * filesize\n *\n * @copyright 2024 Jason Mulligan <jason.mulligan@avoidwork.com>\n * @license BSD-3-Clause\n * @version 10.1.6\n */\nconst ARRAY = \"array\";\r\nconst BIT = \"bit\";\r\nconst BITS = \"bits\";\r\nconst BYTE = \"byte\";\r\nconst BYTES = \"bytes\";\r\nconst EMPTY = \"\";\r\nconst EXPONENT = \"exponent\";\r\nconst FUNCTION = \"function\";\r\nconst IEC = \"iec\";\r\nconst INVALID_NUMBER = \"Invalid number\";\r\nconst INVALID_ROUND = \"Invalid rounding method\";\r\nconst JEDEC = \"jedec\";\r\nconst OBJECT = \"object\";\r\nconst PERIOD = \".\";\r\nconst ROUND = \"round\";\r\nconst S = \"s\";\r\nconst SI = \"si\";\r\nconst SI_KBIT = \"kbit\";\r\nconst SI_KBYTE = \"kB\";\r\nconst SPACE = \" \";\r\nconst STRING = \"string\";\r\nconst ZERO = \"0\";\r\nconst STRINGS = {\r\n\tsymbol: {\r\n\t\tiec: {\r\n\t\t\tbits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\r\n\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t},\r\n\t\tjedec: {\r\n\t\t\tbits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\r\n\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t}\r\n\t},\r\n\tfullform: {\r\n\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t}\r\n};function filesize (arg, {\r\n\tbits = false,\r\n\tpad = false,\r\n\tbase = -1,\r\n\tround = 2,\r\n\tlocale = EMPTY,\r\n\tlocaleOptions = {},\r\n\tseparator = EMPTY,\r\n\tspacer = SPACE,\r\n\tsymbols = {},\r\n\tstandard = EMPTY,\r\n\toutput = STRING,\r\n\tfullform = false,\r\n\tfullforms = [],\r\n\texponent = -1,\r\n\troundingMethod = ROUND,\r\n\tprecision = 0\r\n} = {}) {\r\n\tlet e = exponent,\r\n\t\tnum = Number(arg),\r\n\t\tresult = [],\r\n\t\tval = 0,\r\n\t\tu = EMPTY;\r\n\r\n\t// Sync base & standard\r\n\tif (standard === SI) {\r\n\t\tbase = 10;\r\n\t\tstandard = JEDEC;\r\n\t} else if (standard === IEC || standard === JEDEC) {\r\n\t\tbase = 2;\r\n\t} else if (base === 2) {\r\n\t\tstandard = IEC;\r\n\t} else {\r\n\t\tbase = 10;\r\n\t\tstandard = JEDEC;\r\n\t}\r\n\r\n\tconst ceil = base === 10 ? 1000 : 1024,\r\n\t\tfull = fullform === true,\r\n\t\tneg = num < 0,\r\n\t\troundingFunc = Math[roundingMethod];\r\n\r\n\tif (typeof arg !== \"bigint\" && isNaN(arg)) {\r\n\t\tthrow new TypeError(INVALID_NUMBER);\r\n\t}\r\n\r\n\tif (typeof roundingFunc !== FUNCTION) {\r\n\t\tthrow new TypeError(INVALID_ROUND);\r\n\t}\r\n\r\n\t// Flipping a negative number to determine the size\r\n\tif (neg) {\r\n\t\tnum = -num;\r\n\t}\r\n\r\n\t// Determining the exponent\r\n\tif (e === -1 || isNaN(e)) {\r\n\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\tif (e < 0) {\r\n\t\t\te = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Exceeding supported length, time to reduce & multiply\r\n\tif (e > 8) {\r\n\t\tif (precision > 0) {\r\n\t\t\tprecision += 8 - e;\r\n\t\t}\r\n\r\n\t\te = 8;\r\n\t}\r\n\r\n\tif (output === EXPONENT) {\r\n\t\treturn e;\r\n\t}\r\n\r\n\t// Zero is now a special case because bytes divide by 1\r\n\tif (num === 0) {\r\n\t\tresult[0] = 0;\r\n\t\tu = result[1] = STRINGS.symbol[standard][bits ? BITS : BYTES][e];\r\n\t} else {\r\n\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\tif (bits) {\r\n\t\t\tval = val * 8;\r\n\r\n\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\tval = val / ceil;\r\n\t\t\t\te++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst p = Math.pow(10, e > 0 ? round : 0);\r\n\t\tresult[0] = roundingFunc(val * p) / p;\r\n\r\n\t\tif (result[0] === ceil && e < 8 && exponent === -1) {\r\n\t\t\tresult[0] = 1;\r\n\t\t\te++;\r\n\t\t}\r\n\r\n\t\tu = result[1] = base === 10 && e === 1 ? bits ? SI_KBIT : SI_KBYTE : STRINGS.symbol[standard][bits ? BITS : BYTES][e];\r\n\t}\r\n\r\n\t// Decorating a 'diff'\r\n\tif (neg) {\r\n\t\tresult[0] = -result[0];\r\n\t}\r\n\r\n\t// Setting optional precision\r\n\tif (precision > 0) {\r\n\t\tresult[0] = result[0].toPrecision(precision);\r\n\t}\r\n\r\n\t// Applying custom symbol\r\n\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\tif (locale === true) {\r\n\t\tresult[0] = result[0].toLocaleString();\r\n\t} else if (locale.length > 0) {\r\n\t\tresult[0] = result[0].toLocaleString(locale, localeOptions);\r\n\t} else if (separator.length > 0) {\r\n\t\tresult[0] = result[0].toString().replace(PERIOD, separator);\r\n\t}\r\n\r\n\tif (pad && round > 0) {\r\n\t\tconst i =  result[0].toString(),\r\n\t\t\tx = separator || ((i.match(/(\\D)/g) || []).pop() || PERIOD),\r\n\t\t\ttmp = i.toString().split(x),\r\n\t\t\ts = tmp[1] || EMPTY,\r\n\t\t\tl = s.length,\r\n\t\t\tn = round - l;\r\n\r\n\t\tresult[0] = `${tmp[0]}${x}${s.padEnd(l + n, ZERO)}`;\r\n\t}\r\n\r\n\tif (full) {\r\n\t\tresult[1] = fullforms[e] ? fullforms[e] : STRINGS.fullform[standard][e] + (bits ? BIT : BYTE) + (result[0] === 1 ? EMPTY : S);\r\n\t}\r\n\r\n\t// Returning Array, Object, or String (default)\r\n\treturn output === ARRAY ? result : output === OBJECT ? {\r\n\t\tvalue: result[0],\r\n\t\tsymbol: result[1],\r\n\t\texponent: e,\r\n\t\tunit: u\r\n\t} : result.join(spacer);\r\n}\r\n\r\n// Partial application for functional programming\r\nfunction partial ({\r\n\tbits = false,\r\n\tpad = false,\r\n\tbase = -1,\r\n\tround = 2,\r\n\tlocale = EMPTY,\r\n\tlocaleOptions = {},\r\n\tseparator = EMPTY,\r\n\tspacer = SPACE,\r\n\tsymbols = {},\r\n\tstandard = EMPTY,\r\n\toutput = STRING,\r\n\tfullform = false,\r\n\tfullforms = [],\r\n\texponent = -1,\r\n\troundingMethod = ROUND,\r\n\tprecision = 0\r\n} = {}) {\r\n\treturn arg => filesize(arg, {\r\n\t\tbits,\r\n\t\tpad,\r\n\t\tbase,\r\n\t\tround,\r\n\t\tlocale,\r\n\t\tlocaleOptions,\r\n\t\tseparator,\r\n\t\tspacer,\r\n\t\tsymbols,\r\n\t\tstandard,\r\n\t\toutput,\r\n\t\tfullform,\r\n\t\tfullforms,\r\n\t\texponent,\r\n\t\troundingMethod,\r\n\t\tprecision\r\n\t});\r\n}export{filesize,partial};"],"names":["ARRAY","BIT","BITS","BYTE","BYTES","EMPTY","EXPONENT","FUNCTION","IEC","INVALID_NUMBER","INVALID_ROUND","JEDEC","OBJECT","PERIOD","ROUND","S","SI","SI_KBIT","SI_KBYTE","SPACE","STRING","ZERO","STRINGS","symbol","iec","bits","bytes","jedec","fullform","filesize","arg","pad","base","round","locale","localeOptions","separator","spacer","symbols","standard","output","fullforms","exponent","roundingMethod","precision","e","num","Number","result","val","u","ceil","full","neg","roundingFunc","Math","isNaN","TypeError","floor","log","pow","p","toPrecision","toLocaleString","length","toString","replace","i","x","match","pop","tmp","split","s","l","n","padEnd","value","unit","join","partial"],"sourceRoot":""}